<% layout("/layouts/boilerplate") %>


    <nav class="navbar bg-body-tertiary ">
        <div class="navb">
            <a class="navbar-brand" href="/comingsoon">
                <img src="/assets/language.png" alt="" width="50" height="49">
            </a>
            <% if(!currUser){ %>
                <a href="/user/login" style="text-decoration: none;">
                    <button class="btn mt-2 btn-outline-light bg-dark d-flex button-x ">Sign In</button>
                </a>
                <% } %>
                    <% if(currUser){ %>
                        <a href="/user/logout" style="text-decoration: none;">
                            <button class="btn mt-2 btn-outline-light bg-dark d-flex button-x ">Logout</button>
                        </a>
                        <% } %>

                            <i class="menu mt-4 fa-solid fa-bars fa-2xl" onclick="toggleMenu()"
                                style="color: #ffffff;"></i>


                            <!-- on click it will appear -->


        </div>
        <div class="menu-drop" id="menuDropdown">
            <i class="fa-solid fa-xmark close-icon"></i>
            <div class="menu-item">
                <i class="fa-solid fa-circle-user fa-sm icon"></i>
               <a href="/comingsoon"> <span>Account</span></a>
            </div>
            <div class="menu-item">
                <i class="fa-solid fa-gear fa-sm icon" style="color: #ffffff;"></i>
               <a href="/comingsoon"> <span>Settings</span></a>
            </div>
            <div class="menu-item">
                <i class="fa-solid fa-lock fa-sm icon"></i>
                <span>Safe search enabled</span>
            </div>
            <div class="menu-item">
                <i class="fa-regular fa-clock fa-sm icon"></i>
               <a href="/comingsoon"> <span>Search History</span></a>
            </div>
            <div class="menu-item">
                <i class="fa-solid fa-circle-half-stroke fa-sm icon"></i> <span>Theme</span>
               <i class="bi bi-chevron-down dropdown-arrow"></i>
            </div>
            <div class="theme-options" id="theme-options">
                <!-- <div class="radio-option">
                    <input type="radio" id="light" name="theme" value="light">
                    <label for="light">Light</label>
                </div>
                <div class="radio-option">
                    <input type="radio" id="dark" name="theme" value="dark" checked>
                    <label for="dark">Dark</label>
                </div> -->
                <div class="radio-option">
                    <input type="radio" id="system" name="theme" value="system">
                    <label for="system">System Default</label>
                </div>
            </div>
        </div>
    </nav>
    <div class="container">
        <img class="card-img-top show-img" src="/assets/logo2.png">
        <form method="post" action="/home/search" enctype="multipart/form-data">
            <div class="search-body">
                <div class="search">
                    <span class="search-icon material-symbols-outlined">search</span>
                    <div class="search-1">
                        <input class="search-input" type="search" name="search[q]" placeholder="Search"
                            autocomplete="off">
                    </div>
                    <div class="search-2">
                        <span class=" mic material-symbols-outlined"> mic</span>
                        <span class="img material-symbols-outlined"> center_focus_weak</span>
                    </div>
                </div>
                &nbsp; &nbsp; &nbsp; &nbsp; <a href="/ai">
                    <div class="imga"></div>
                </a>
            </div>

    </div>
    </form>
    </div>
    <div id="uploadDialog" class="hidden">
        <div class="dialog-container">
            <div id="closeButton" class="icon-clear" title="Close">Ã—</div>
            <div id="title">Upload Image</div>
            <div class="d-flex justify-content-center align-item-center" style="padding-top: 25%;">
                REVERSE SEARCH COMING SOON
            </div>
            <!-- <div id="dragDropArea" class="drag-drop-area">
                <div class="drag-text">Drag your image here</div>
                Progress bar for uploading
                <div class="progress-bar-container hidden">
                    <div class="progress-bar"></div>
                    <div class="progress-text">Uploading...</div>
                </div>
            </div>
            <input type="file" id="fileUpload" class="file-upload" style="display: none;">
            <label for="fileUpload" class="file-upload-label">Or click here to upload file</label>
            <input type="text" id="imageLink" class="image-link" placeholder="Paste image link">
            <button id="searchButton" class="search-button">Search</button> -->
        </div>
    </div>

    <div class="custom-btn">
        <a href="/comingsoon">
        <button class="custom-button" >
        <i class="fa-solid fa-pen" style="color: #000000;"></i>&nbsp; Customize
        </button>
    </a>
    </div>
    </div>
    </div>
    <footer id="footer">
        <div class="footer-container">
            <div class="branding-container">
                <hr class="horizontal-line"> &nbsp;&nbsp;&nbsp;&nbsp;
                <div class="branding-text">
                    <h3 class="skynet">SKYNET</h3> <!-- SKYNET text with gradient -->
                    <h4 class="made-in">Made in <span class="bharat">BHARAT</span></h4>
                    <!-- Made in Bharat text with gradient on Bharat -->
                </div>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <hr class="horizontal-line">
            </div>
            <ul class="footer-links">
                <!-- Footer links with reduced size -->
                <li><a href="/about">About</a></li>
                <li><a href="/comingsoon">Advertising</a></li>
                <li><a href="/comingsoon">Business</a></li>
                <li><a href="/company">Company Vision</a></li>
                <li><a href="/comingsoon">Privacy</a></li>
                <li><a href="/comingsoon">Terms</a></li>
                <li><a href="/contact">Contact Us</a></li>
            </ul>
        </div>
    </footer>
    <div class="mobile-footer-container">
        <footer class="mobile-footer">
            <div id="chatButton" class="footer-button">
                <a href="/ai">
                    <div><i class="bi bi-chat-left-text"></i></div>
                    <div>Chat</div>
               </a>
            </div>
            <div id="searchButton" class="footer-button active" onclick="highlightButton('searchButton')">
                <div class="material-symbols-outlined">search</div>
                <div>Search</div>
            </div>
            <div id="menuButton" class="footer-button" onclick="openMenu()">
                <div class="material-symbols-outlined">menu</div>
                <div>Menu</div>
            </div>
        </footer>
    </div>

    <div class="sidebar" id="sidebar">
        <ul class="footer-links-mobile">
            <li><a href="/about">About</a></li>
            <li><a href="/comingsoon">Advertising</a></li>
            <li><a href="/comingsoon">Business</a></li>
            <li><a href="/company">Company Vision</a></li>
            <li><a href="/comingsoon">Privacy</a></li>
            <li><a href="/comingsoon">Terms</a></li>
            <li><a href="/contact">Contact Us</a></li>
        </ul>
    </div>
    </div>

    <div class="trending-topics show" id="trendingTopics">
        <h2>Trending Topics</h2>
        <ul class="trending-topic-list">
            <% trends.slice(0, 5).forEach(trend => { %>
                <li class="trending-topic-item"><%= trend.title.split(' ').slice(0, 7).join(' ') %></li>
            <% }); %>
        </ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchButton = document.getElementById('searchButton');
            const trendingTopics = document.querySelector('.trending-topics');
            const mobileFooterContainer = document.querySelector('.mobile-footer-container');

            // Default: Show trending topics and highlight search button
            trendingTopics.classList.add('show');
            searchButton.classList.add('active');



            window.addEventListener('DOMContentLoaded', function () {
                if (window.innerWidth <= 400) {
                    createMobileFooter();
                }
            });

            function createMobileFooter() {
                // Create a new footer element
                var mobileFooter = document.createElement('footer');
                mobileFooter.className = 'mobile-footer'; // Set the footer class

                // Create three buttons for the footer
                var chatButton = createFooterButton('Chat', '/ai');
                var searchButton = createFooterButton('Search', '#', true); // Set the second button as active
                var menuButton = createFooterButton('Menu', '#');

                // Append buttons to the mobile footer
                mobileFooter.appendChild(chatButton);
                mobileFooter.appendChild(searchButton);
                mobileFooter.appendChild(menuButton);

                // Append the mobile footer to the existing mobile footer container
                var mobileFooterContainer = document.querySelector('.mobile-footer-container');
                mobileFooterContainer.appendChild(mobileFooter);

                // Show the mobile footer container
                mobileFooterContainer.style.display = 'block';
            }

            function createFooterButton(text, link, isActive = false) {
                // Create a button element
                var button = document.createElement('button');

                // Set button text
                button.textContent = text;

                // Set button link
                button.onclick = function () {
                    window.location.href = link;
                };

                // Set button class based on isActive
                button.className = isActive ? 'footer-button active' : 'footer-button';

                return button;
            }


            function checkScreenWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 400) {
                    trendingTopics.classList.add('show'); // Show trending topics
                } else {

                    trendingTopics.classList.remove('show');
                }
            }

            // Toggle trending topics visibility based on screen width
            function toggleTrending() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 400) {
                    trendingTopics.classList.toggle('show');
                }
            }

            // Call checkScreenWidth initially and on window resize
            checkScreenWidth();
            window.addEventListener('resize', checkScreenWidth);
        });
        function highlightButton(buttonId) {
            const buttons = document.querySelectorAll('.footer-button');
            buttons.forEach(button => button.classList.remove('active'));

            // Add 'active' class to the clicked button
            document.getElementById(buttonId).classList.add('active');
        }
        function openMenu() {
            var sidebar = document.getElementById("sidebar");


            sidebar.classList.toggle("expanded");
        }
        function toggleMenu() {
            console.log('Toggle menu clicked');
            let menuDropdown = document.getElementById('menuDropdown');
            if (menuDropdown) {
                console.log('Menu dropdown found');
                if (menuDropdown.style.display == "block") {
                    menuDropdown.style.display = 'none';
                }
                else {
                    menuDropdown.style.display = "block"
                }
            } else {
                console.error('Error: Menu dropdown element not found.');
            }
        }
        let drop = document.querySelector('.dropdown-arrow');
        let closeIcon = document.querySelector('.close-icon');

        drop.addEventListener('click', () => {
            let menu = document.querySelector('.theme-options');
            menu.style.display = (menu.style.display == 'block') ? 'none' : 'block';
            drop.style.transform = (menu.style.display == 'none') ? 'rotate(0deg)' : 'rotate(180deg)';
            drop.style.marginTop = '-8px';
        });
        document.addEventListener('DOMContentLoaded', function () {
            const dropdownArrow = document.querySelector('.dropdown-arrow');
            const menu = document.querySelector('.menu-drop');
            let isOpen = false;

            dropdownArrow.addEventListener('click', function () {
                if (!isOpen) {
                    menu.style.display = 'block';
                    menu.style.height = '340px';
                    isOpen = true;
                    console.log('Menu opened.');
                    dropdownArrow.style.marginTop = '-8px';
                } else {
                    menu.style.display = 'block';
                    menu.style.height = '285px';
                    isOpen = false;
                    console.log('Menu closed.');
                }
            });

            const closeIcon = document.querySelector('.close-icon');
            closeIcon.addEventListener('click', function () {
                menu.style.display = 'none';
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const micIcon = document.querySelector('.mic');

            micIcon.addEventListener('click', function () {
                startMicrophoneInput();
                console.log('Microphone icon clicked.');
            });

            let mediaRecorder;
            let recordedChunks = [];

            function startMicrophoneInput() {
                navigator.mediaDevices.getUserMedia({ audio: true })
                    .then(function (stream) {
                        console.log('Microphone access granted');

                        mediaRecorder = new MediaRecorder(stream);

                        mediaRecorder.ondataavailable = function (event) {
                            if (event.data.size > 0) {
                                recordedChunks.push(event.data);
                            }
                        };

                        mediaRecorder.onstop = function () {
                            let blob = new Blob(recordedChunks, { type: 'audio/webm' });
                            let audioUrl = URL.createObjectURL(blob);
                            console.log('Recording stopped, audio URL:', audioUrl);
                            // Here, you can further process the recorded audio URL
                        };

                        mediaRecorder.start();

                        setTimeout(function () {
                            mediaRecorder.stop();
                            stream.getTracks().forEach(track => track.stop());
                            console.log('Recording stopped after 5 seconds');
                        }, 5000);
                    })
                    .catch(function (err) {
                        console.error('Error accessing microphone:', err);
                    });
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            const imga = document.querySelector('.img');
            const uploadDialog = document.getElementById('uploadDialog');
            const closeButton = document.getElementById('closeButton');
            const uploadImageBtn = document.querySelector('.upload-image-btn');
            const fileUpload = document.getElementById('fileUpload');
            const imageLink = document.getElementById('imageLink');
            const searchButton = document.getElementById('searchButton');

            imga.addEventListener('click', function () {
                uploadDialog.classList.add('show');
                console.log('Image clicked, upload dialog opened.');
            });

            // Close upload dialog
            closeButton.addEventListener('click', function () {
                uploadDialog.classList.remove('show');
                console.log('Upload dialog closed.');
            });

            // Open upload dialog on button click
            uploadImageBtn.addEventListener('click', function () {
                uploadDialog.classList.add('show');
                console.log('Upload dialog opened.');
            });

            // Handle file upload
            fileUpload.addEventListener('change', function (event) {
                console.log('File uploaded:', event.target.files);
                // Handle file upload
            });

            // Handle image link search
            searchButton.addEventListener('click', function () {
                const imageURL = imageLink.value.trim();
                if (imageURL !== '') {
                    // Perform search based on image link
                    console.log('Searching with image link:', imageURL);
                } else {
                    alert('Please enter an image link.');
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            const uploadDialog = document.getElementById('uploadDialog');
            const closeButton = document.getElementById('closeButton');
            const dragDropArea = document.getElementById('dragDropArea');
            const progressBarContainer = document.querySelector('.progress-bar-container');
            const progressBar = document.querySelector('.progress-bar');

            closeButton.addEventListener('click', function () {
                uploadDialog.classList.add('hidden');
            });

            dragDropArea.addEventListener('dragover', function (event) {
                event.preventDefault();
                dragDropArea.classList.add('drag-over');
            });

            dragDropArea.addEventListener('dragleave', function () {
                dragDropArea.classList.remove('drag-over');
            });

            dragDropArea.addEventListener('drop', function (event) {
                event.preventDefault();
                dragDropArea.classList.remove('drag-over');
                const files = event.dataTransfer.files;
                handleFiles(files);
            });

            function handleFiles(files) {
                if (files.length === 0) return;

                const file = files[0];
                const reader = new FileReader();

                reader.onload = function (event) {
                    // Simulate uploading progress
                    uploadDialog.classList.remove('hidden');
                    progressBarContainer.classList.remove('hidden');
                    progressBar.style.width = '0%';

                    let progress = 0;
                    const interval = setInterval(function () {
                        progress += Math.random() * 5;
                        progressBar.style.width = `${progress}%`;

                        if (progress >= 100) {
                            clearInterval(interval);
                            setTimeout(function () {
                                uploadDialog.classList.add('hidden');
                                progressBarContainer.classList.add('hidden');
                                progressBar.style.width = '0%';
                            }, 1000);
                        }
                    }, 300);
                };

                reader.readAsDataURL(file);
            }
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>